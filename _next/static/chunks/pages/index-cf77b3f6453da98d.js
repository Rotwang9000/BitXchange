(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[405],{48312:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/",function(){return n(51391)}])},51391:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return Home}});var a=n(85893),s=n(9008),o=n.n(s),i=n(25675),r=n.n(i),l=n(72242),c=n.n(l),u=n(67294),p=n(56210);async function getTokens(e,t){try{let n=new p.AnkrProvider("https://rpc.ankr.com/multichain/fb4077f99c50c07e75aec9cfcebfaf971cb3fce319a807e823943f962dc04e7d");console.log("chainId: ",t);let a=1===t?(await n.getAccountBalance({blockchain:["eth"],walletAddress:e})).assets:[{contractAddress:"0xD150E07F602BF3239BE3DE4341E10BE1678A3F8B",tokenName:"BitX",tokenSymbol:"BITX",tokenDecimals:18,balance:!1,blockchain:"eth"},{contractAddress:"0x7bD9bC5F400774b5f033FA3e7865114f250a0aF0",tokenName:"MyToken",tokenSymbol:"MTK",tokenDecimals:18,balance:!1,blockchain:"eth"}];console.log("assets: ",a,t);let s=a.map(e=>(e.contractAddress||(e.contractAddress="".concat(e.blockchain,".").concat(e.tokenSymbol)),e)),o=s.reduce((e,t)=>(e[t.contractAddress]={id:t.contractAddress,name:t.tokenName,symbol:t.tokenSymbol,contractAddress:t.contractAddress,decimals:t.tokenDecimals,balance:t.balanceRawInteger},e),{});return Object.values(o)}catch(e){return console.error("Failed to fetch tokens:",e),[]}}var d=n(69077);function useAddress(){let{address:e,isConnected:t}=(0,d.mA)();return t?e:""}let y={tokens:[],slippage:.5,defaultSlippage:250},reducer=(e,t)=>{switch(t.type){case"SET_TOKENS":return{...e,tokens:t.payload};case"SET_SLIPPAGE":return{...e,slippage:t.payload};case"ADD_TOKEN":return{...e,tokens:[...e.tokens,t.payload]};case"SET_DEFAULT_SLIPPAGE":return{...e,defaultSlippage:t.payload};default:throw Error("Unhandled action type")}},m=(0,u.createContext)(void 0),TokenProvider=e=>{let{children:t}=e,[n,s]=(0,u.useReducer)(reducer,y),o=useAddress(),i=(0,d.xx)();return(0,u.useEffect)(()=>{o&&getTokens(o,i).then(e=>{console.log("Tokens:",e),s({type:"SET_TOKENS",payload:e})})},[o,i]),(0,a.jsx)(m.Provider,{value:{state:n,dispatch:s,addToken:e=>{s({type:"ADD_TOKEN",payload:e})}},children:t})},useTokenContext=()=>{let e=(0,u.useContext)(m);if(void 0===e)throw Error("useTokenContext must be used within a TokenProvider");return e};var g=n(2164),h=n.n(g),f=n(13530),w=n(57200),T=JSON.parse('[{"inputs":[],"name":"depositETH","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_uniswapRouter","type":"address"},{"internalType":"address","name":"_rewardPot","type":"address"},{"internalType":"address","name":"_relayer","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newFee","type":"uint256"}],"name":"FeeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"receiveFunds","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"rescueTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"newRewardPot","type":"address"}],"name":"RewardPotUpdated","type":"event"},{"inputs":[{"internalType":"uint256","name":"_newEstimatedGasForSwap","type":"uint256"}],"name":"setEstimatedGasForSwap","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newFee","type":"uint256"}],"name":"setFeePercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newRelayer","type":"address"}],"name":"setRelayer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newRewardPot","type":"address"}],"name":"setRewardPot","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newRouter","type":"address"}],"name":"setUniswapRouter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"uint256","name":"receivedETH","type":"uint256"}],"name":"SwapSuccessful","type":"event"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"minAmountOut","type":"uint256"},{"internalType":"uint256","name":"expectedAmountOut","type":"uint256"},{"internalType":"uint256","name":"unpaidFees","type":"uint256"}],"name":"swapTokensForETH","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"minAmountOut","type":"uint256"}],"name":"swapTokensForETH_UserPaysGas","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"minAmountOut","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"swapTokensForETH_UserPaysGas_withPermit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"minAmountOut","type":"uint256"},{"internalType":"uint256","name":"expectedAmountOut","type":"uint256"},{"internalType":"uint256","name":"unpaidFees","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"swapTokensWithPermit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"minAmountOut","type":"uint256"},{"internalType":"uint256","name":"expectedAmountOut","type":"uint256"},{"internalType":"uint256","name":"unpaidFees","type":"uint256"}],"name":"swapTokensWithTransfer","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"fallback"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"userGasPrice","type":"uint256"}],"name":"canSwap","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"estimatedGasForSwap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feePercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"payload","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"getSignerAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"slippage","type":"uint256"},{"internalType":"uint256","name":"userGasPrice","type":"uint256"}],"name":"getSwapQuote","outputs":[{"internalType":"uint256","name":"minAmountOut","type":"uint256"},{"internalType":"uint256","name":"estimatedGasCost","type":"uint256"},{"internalType":"bool","name":"canDoSwap","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"relayer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rewardPot","outputs":[{"internalType":"contract IRewardPot","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"uniswapAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"uniswapRouter","outputs":[{"internalType":"contract IUniswapV2Router02","name":"","type":"address"}],"stateMutability":"view","type":"function"}]');async function getSwapQuote(e,t,n,a,s,o){try{s===BigInt(0)&&(s=BigInt((await e.getFeeData()).gasPrice||10)),console.log("userGasPrice: ",s),console.log("tokenAddress: ",t),console.log("amount: ",n),console.log("slippage: ",a);let i=new w.CH(o,T,e),r=await i.getSwapQuote(t,n,a,s);return console.log("result: ",r),r}catch(e){throw console.error("Error getting swap quote:",e),e}}var x=n(48470),k=n(83243),b=n(92922);let v=["function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)","function nonces(address owner) view returns (uint256)","function approve(address spender, uint256 amount) external returns (bool)","function allowance(address owner, address spender) external view returns (uint256)"];async function getTokenTransferPermission(e,t,n,a,s,o){let i;let r=e.contractAddress,l=await (0,k.xz)(),c=await (0,k.uV)(),u=new w.CH(r,v,s),p=!1,d=Math.floor(Date.now()/1e3)+1200;try{i=await new Promise((e,t)=>{let a=0,getNonce=async()=>{try{let t=await u.nonces(n);e(BigInt(t))}catch(e){console.log(e),a<3?(a++,setTimeout(getNonce,5e3)):t(e)}};getNonce()}),console.log("nonce",i),p=!0}catch(e){console.log(e)}try{if(p){let s={name:e.name,version:"1",chainId:null==o?void 0:o.id,verifyingContract:r},c={owner:n,spender:a,value:t,nonce:i,deadline:BigInt(d)};console.log("value",c);let u=await (null==l?void 0:l.signTypedData({types:{Permit:[{name:"owner",type:"address"},{name:"spender",type:"address"},{name:"value",type:"uint256"},{name:"nonce",type:"uint256"},{name:"deadline",type:"uint256"}]},domain:s,primaryType:"Permit",message:c}));console.log("xsig",u);let p=b.P.from(u);return console.log("sig",p),{permit:!0,allowanceTime:0,deadline:d,v:Number(p.v),r:p.r.toString(),s:p.s.toString()}}{let e=await u.allowance(n,a);if(console.log("allowance",e,t),e>=t)return{permit:!1,allowanceTime:d,deadline:0,v:0,r:"",s:""};let s=await (null==l?void 0:l.sendTransaction({to:r,data:u.interface.encodeFunctionData("approve",[a,t]),chain:o}));if(console.log(s),!s)throw Error("Transaction failed");let i=!0;for(;i;)try{await new Promise(e=>setTimeout(e,1e4));let e=await (null==c?void 0:c.getTransactionReceipt({hash:s}));if(console.log(e),!e)throw Error("Transaction failed");i=!1}catch(e){console.log(e),i=!!(e.message.includes("could not be found")||e.message.includes("Insufficient RU balance"))}console.log("tx DONE"),await new Promise(e=>setTimeout(e,5e3));let p=await u.allowance(n,a);if(console.log("newAllowance",p),p<t&&(await new Promise(e=>setTimeout(e,15e3)),p=await u.allowance(n,a),console.log("newAllowance",p),p<t))throw Error("Approval failed");return{permit:!1,allowanceTime:d,deadline:0,v:0,r:"",s:""}}}catch(e){throw console.log(e),e}}var _=n(45652),S=n.n(_),j=n(12229),P=n(39613),B=n(2790);let A=j.m9(6401),I=j.m9(6401),N=0;var components_ContractPays=e=>{let{takerAddress:t,sellToken:n,exchangeProxy:s,amount:o,minAmountOut:i}=e,{chain:r}=(0,d.LN)(),[l,c]=(0,u.useState)(""),{provider:p}=(0,f.x)(),[y,m]=(0,u.useState)(!1),g=n.contractAddress,[h,w]=(0,u.useState)({permit:!1,allowanceTime:0,deadline:0,v:0,r:"",s:""}),[T,x]=(0,u.useState)(!1),{data:b,signMessage:v}=(0,d.QW)(),_=0,fetchDataWithRetry=async()=>{try{let e=await (null==p?void 0:p.getFeeData());if(!e)throw Error("No fee data");return e}catch(e){if(console.error("Error fetching fee data:",e.message),_<5)return _++,console.log("Retrying (".concat(_,"/").concat(5,")...")),await new Promise(e=>setTimeout(e,2500)),await fetchDataWithRetry();throw console.error("Max retries reached. Unable to fetch fee data."),e}},handleApproveAndSign=async()=>{try{if(!(N=await fetch("".concat(E,"/get-nonce"),{method:"POST",mode:"cors",headers:{"Content-Type":"application/json"},body:JSON.stringify({address:t})}).then(e=>e.json()).then(e=>(console.log("get-nonce response:",e),e.nonce||0)).catch(e=>(console.error("get-nonce error:",e),0)))||0===N){console.error("No nonce found"),c("Cannot access relay server. Please try again later, or check X/Telegram for server status.");return}let e=await (0,k.xz)();if(!e)return console.error("No wallet client found");if(!p){console.error("provider is undefined");return}console.log("provider:",p);let a=P.R.defaultAbiCoder(),l=new B.vU(["function transferFrom(address,address,uint256)"]);I=l.encodeFunctionData("transferFrom",[t,s,BigInt(o)]),console.log("messageHash:",I);let u=await fetchDataWithRetry(),d=u.gasPrice||u.maxFeePerGas||BigInt("40");console.log("gasPrice:",d);let y=BigInt(d)*BigInt(25e4);if(y>BigInt(o)){console.error("Gas cost is greater than amount"),c("Gas cost is greater than amount returned."),m(!1);return}console.log("gasLimit:",25e4),m(!0),A=a.encode(["address","address","address","uint256","uint256","uint256","uint256","uint256","uint256"],[t,s.toUpperCase().replace("0X","0x"),g.toUpperCase().replace("0X","0x"),BigInt(o),BigInt(i),BigInt(N),BigInt(0),d,BigInt(25e4)]),console.log("message:",A,g.toUpperCase().replace("0X","0x"),o,i,N,d,25e4),console.log("signing data",I);try{let e=await getTokenTransferPermission(n,BigInt(o),t,s,p,r);console.log("signMessage result:",e),e&&(console.log(e),x(!0),w(e),v({message:A}))}catch(e){throw console.error("signMessage error:",e),c("Something went wrong.. Please try again later, or check X/Telegram for server status."),m(!1),e}}catch(e){console.error("handleApproveAndSign error:",e),c("Something went wrong.. Please try again later, or check X/Telegram for server status."),m(!1)}};return(0,u.useEffect)(()=>{if(!b)return;let e=(null==r?void 0:r.id)===1?"/swapforeth":"/swapforsepolia";console.log("message:",A),console.log("signMessageData:",b),fetch(E+e,{method:"POST",mode:"cors",headers:{"Content-Type":"application/json"},body:JSON.stringify({to:s,signedData:A,signMessageData:b,messageHash:I,gasPrice:101,nonce:N,permitResult:h})}).then(e=>{console.log(e),c("On it's way!"),m(!1)}).catch(e=>{console.error(e),m(!1),c("Something went wrong. If you are swapping small amounts it may be there is not enough to pay for the transaction.")})},[r,s,b]),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("button",{onClick:handleApproveAndSign,disabled:y,children:y?"In Progress...":"Swap to ETH: We Pay Gas *"}),(0,a.jsxs)("div",{className:S().contractPaysInfo,children:["* May require minimal gas for approval, depending on token contract.",(0,a.jsx)("br",{}),"Soon: ",(0,a.jsx)("a",{href:"https://token.bitx.cx",target:"_blank",children:"Registered $BitX stakers can get this loaned"}),(0,a.jsx)("br",{}),"Gas/Tx Fee taken from result."]}),(0,a.jsx)("div",{className:S().contractPaysInfoTxt,children:l})]})},components_UserPays=e=>{let{takerAddress:t,sellToken:n,exchangeProxy:s,amount:o,minAmountOut:i}=e,[r,l]=(0,u.useState)(""),[c,p]=(0,u.useState)("Swap to ETH: You Pay Gas"),[y,m]=(0,u.useState)(""),{provider:g}=(0,f.x)(),[w,x]=(0,u.useState)(!1),[k,b]=(0,u.useState)(!1),{chain:v}=(0,d.LN)(),_=(0,d.xx)(),[S,j]=(0,u.useState)({permit:!1,allowanceTime:0,deadline:0,v:0,r:"",s:""}),P=n.contractAddress,{config:B}=(0,d.PJ)({address:s,chainId:_,abi:T,functionName:"swapTokensForETH_UserPaysGas_withPermit",args:[P,BigInt(o),i,BigInt(S.deadline),parseInt(S.v.toString()),S.r,S.s],enabled:k}),{data:A,write:I}=(0,d.GG)(B),{isLoading:N,isSuccess:E}=(0,d.BX)({hash:null==A?void 0:A.hash}),handleUserPays=async()=>{l(""),p("Sending transaction...");try{let e=await getTokenTransferPermission(n,BigInt(o),t,s,g,v);console.log("signMessage result:",e),b(!0),j(e)}catch(e){console.error("signMessage error:",e),m("Something went wrong.. Please try again later, or check X/Telegram for server status."),x(!1)}p("Transaction sent!")};return(0,u.useEffect)(()=>{if(!0===S.permit||S.allowanceTime>0){p("Sending TX");try{null==I||I()}catch(e){console.error("write error:",e),p("Swap to ETH: You Pay Gas"),l("Something went wrong.. Please try again later, or check X/Telegram for server status.")}}},[S,I]),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("button",{disabled:N,className:h().quoteButton,onClick:async()=>{handleUserPays()},children:c||"Swap to ETH: You Pay Gas"}),N&&(0,a.jsx)("div",{children:"Waiting for confirmation..."}),(0,a.jsxs)("div",{children:[r,y]}),E&&(0,a.jsxs)("div",{children:["Successfully Swapped!",(0,a.jsx)("div",{children:(0,a.jsx)("a",{href:"https://etherscan.io/tx/".concat(null==A?void 0:A.hash),target:"_blank",children:"View TX"})})]})]})};let E="https://router.bitx.cx",R="0x623944a16f3a8d083a4f88acab4faa3a9040b24e";var components_TokenRow=e=>{let{token:t,tokenBalance:n,displayBalance:s}=e,[o,i]=(0,u.useState)(BigInt(0)),[r,l]=(0,u.useState)(null),[c,p]=(0,u.useState)(BigInt(0)),[d,y]=(0,u.useState)(BigInt(0)),{state:m,dispatch:g}=useTokenContext(),[w,T]=(0,u.useState)(""),k=useAddress(),{provider:b}=(0,f.x)(),[v]=(0,u.useState)("");console.log("TokenRow token:",t),console.log("TokenRow walletAddress:",k),console.log("displayBalance:",s),(0,u.useEffect)(()=>{n&&i(n)},[n]),console.log("TokenRow tokenBalance:",n);let handleGetQuote=async()=>{if(!b)return console.error("No provider found");try{T(""),p(BigInt(0));let e=await getSwapQuote(b,t.contractAddress,BigInt(o),m.defaultSlippage,BigInt(0),R);console.log("Quote:",e),l(e)}catch(e){console.error("Error getting quote:",e),T("Error getting quote, please try again shortly")}},_=BigInt(r?BigInt(r[1]):BigInt(0)),S=r?BigInt(r[0]):BigInt(0),j=BigInt(S)-BigInt(_),P=j*(BigInt(1e4)+BigInt(m.defaultSlippage))/BigInt(1e4);(0,u.useEffect)(()=>{k&&(null==b||b.getBalance(k).then(e=>{y(BigInt(e))}))},[k]),c===BigInt(0)&&r&&p(j),(0,u.useEffect)(()=>{l(null)},[o]);let B=!!r&&r[2],A=BigInt(_),I=BigInt(Number(d));return console.log("TokenRow canSwap:",B),console.log("TokenRow egc:",A),console.log("TokenRow ugb:",I),(0,a.jsxs)("div",{className:h().tokenActions,children:[n>0&&"0x"===t.contractAddress.substring(0,2)&&(0,a.jsxs)("div",{className:h().sliderContainer,children:[(0,a.jsx)("input",{type:"range",min:"0",max:n.toString(),step:(parseInt(n.toString())/1e3).toString(),value:o.toString(),onChange:e=>i(BigInt(+e.target.value)),className:h().rangeInput}),(0,a.jsx)("span",{className:h().rangeValue,children:(r||o!=n)&&(0,a.jsxs)(a.Fragment,{children:["Convert: ",x.dF(o).toString()," ",t.symbol]})})]}),!r&&(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("button",{onClick:handleGetQuote,disabled:o===BigInt(0),className:h().actionButton,children:"Get Quote"}),(0,a.jsx)("div",{id:"quoteinfo",children:v})]}),w&&(0,a.jsx)("div",{className:"error-message",children:w}),r&&(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("input",{type:"range",min:"0",max:P.toString(),value:c.toString(),onChange:e=>p(BigInt(e.target.value)),className:h().rangeInput}),(0,a.jsxs)("span",{className:h().rangeValue,children:["ETH Minimum returned: ",x.dF(c)," "]}),I>A&&(0,a.jsx)(components_UserPays,{takerAddress:k||"0x000",sellToken:t,exchangeProxy:R,amount:o.toString(),minAmountOut:c}),B&&(0,a.jsx)(components_ContractPays,{takerAddress:k||"0x000",sellToken:t,exchangeProxy:R,amount:o.toString(),minAmountOut:c})]})]})},M=u.memo(e=>{let{token:t,balance:n}=e,[s,o]=(0,u.useState)(""),i=parseFloat(n||"0"),r=x.dF(n||"0"),l=BigInt(n||"0");return i>0&&"0x"===t.contractAddress.substring(0,2)&&(0,a.jsxs)("li",{className:h().TokenRow,children:[(0,a.jsxs)("div",{className:h().tokenDetails,children:[(0,a.jsxs)("div",{className:h().tokenNameSymbol,children:[(0,a.jsx)("div",{className:h().tokenName,children:t.name}),(0,a.jsx)("div",{className:h().tokenSymbol,children:(0,a.jsx)("a",{href:"https://etherscan.io/token/"+t.contractAddress,target:"_blank",children:t.symbol})})]}),(0,a.jsx)("div",{className:h().tokenBalance,children:r||"Loading..."})]}),(0,a.jsx)(components_TokenRow,{token:t,tokenBalance:l,displayBalance:r}),s&&(0,a.jsx)("div",{className:"error-message",children:s})]})});async function FetchTokenBalance(e,t,n){try{let a=new w.CH(e,["function balanceOf(address owner) view returns (uint256)"],n),s=await a.balanceOf(t);return s}catch(e){throw console.error("Error fetching token balance:",e),e}}var components_TokenList=()=>{let[e,t]=(0,u.useState)({}),[n,s]=(0,u.useState)(!0),o=useAddress(),{state:i}=useTokenContext(),{provider:r}=(0,f.x)(),l=i.tokens;return(0,u.useEffect)(()=>{let e=!0,fetchBalancesSequentially=async()=>{let n={};if(Array.isArray(l)&&l.length>0&&o&&r){for(let e of l)try{let a=e.balance||await FetchTokenBalance(e.contractAddress,o,r);n[e.id]=a,t(e=>({...e,...n})),console.log("TokenList balance:",a)}catch(t){console.error("Error fetching balance for token",e.id,t)}e&&(console.log("TokenList newBalances:",n),t(e=>({...e,...n})),s(!1))}};return fetchBalancesSequentially(),()=>{e=!1}},[l,o,r]),(0,a.jsx)("ul",{className:h().tokenRowContainer,children:n?(0,a.jsxs)("div",{children:["Loading... This may take a while if you have many tokens.",(0,a.jsx)("br",{}),"Make sure you have connected your wallet. "]}):l.map(t=>(0,a.jsx)(M,{token:t,balance:e[t.id]},t.id))})},components_SlippageSetting=()=>{let{state:e,dispatch:t}=useTokenContext();return e.defaultSlippage&&(0,a.jsxs)("div",{className:h().defaultSlippage,children:[" Default Slippage:",(0,a.jsx)("input",{type:"range",min:"1",max:"1000",step:"10",value:e.defaultSlippage,onChange:e=>{t({type:"SET_DEFAULT_SLIPPAGE",payload:parseFloat(e.target.value)})}}),(0,a.jsxs)("span",{children:[(e.defaultSlippage/100).toString(),"%"]})]})};function Home(){let[e,t]=(0,u.useState)(!1),[n,s]=(0,u.useState)(!1),closeAll=()=>{t(!1),s(!1)};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(o(),{children:[(0,a.jsx)("title",{children:"BitXchange"}),(0,a.jsx)("meta",{name:"description",content:"Swap your tokens to ETH even when you have no gas"}),(0,a.jsx)("meta",{name:"viewport",content:"width=device-width, initial-scale=1"}),(0,a.jsx)("link",{rel:"apple-touch-icon",sizes:"57x57",href:"/favicon/apple-icon-57x57.png"}),(0,a.jsx)("link",{rel:"apple-touch-icon",sizes:"60x60",href:"/favicon/apple-icon-60x60.png"}),(0,a.jsx)("link",{rel:"apple-touch-icon",sizes:"72x72",href:"/favicon/apple-icon-72x72.png"}),(0,a.jsx)("link",{rel:"apple-touch-icon",sizes:"76x76",href:"/favicon/apple-icon-76x76.png"}),(0,a.jsx)("link",{rel:"apple-touch-icon",sizes:"114x114",href:"/favicon/apple-icon-114x114.png"}),(0,a.jsx)("link",{rel:"apple-touch-icon",sizes:"120x120",href:"/favicon/apple-icon-120x120.png"}),(0,a.jsx)("link",{rel:"apple-touch-icon",sizes:"144x144",href:"/favicon/apple-icon-144x144.png"}),(0,a.jsx)("link",{rel:"apple-touch-icon",sizes:"152x152",href:"/favicon/apple-icon-152x152.png"}),(0,a.jsx)("link",{rel:"apple-touch-icon",sizes:"180x180",href:"/favicon/apple-icon-180x180.png"}),(0,a.jsx)("link",{rel:"icon",type:"image/png",sizes:"192x192",href:"/favicon/android-icon-192x192.png"}),(0,a.jsx)("link",{rel:"icon",type:"image/png",sizes:"32x32",href:"/favicon/favicon-32x32.png"}),(0,a.jsx)("link",{rel:"icon",type:"image/png",sizes:"96x96",href:"/favicon/favicon-96x96.png"}),(0,a.jsx)("link",{rel:"icon",type:"image/png",sizes:"16x16",href:"/favicon/favicon-16x16.png"}),(0,a.jsx)("meta",{name:"msapplication-TileColor",content:"#ffffff"}),(0,a.jsx)("meta",{name:"msapplication-TileImage",content:"/favicon/ms-icon-144x144.png"}),(0,a.jsx)("meta",{name:"theme-color",content:"#ffffff"}),(0,a.jsx)("link",{rel:"stylesheet",href:"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"})]}),(0,a.jsxs)("header",{children:[(0,a.jsx)("div",{className:c().backdrop,style:{opacity:n||e?1:0}}),(0,a.jsxs)("div",{className:c().header,children:[(0,a.jsx)("div",{className:c().logo,children:(0,a.jsx)(r(),{src:"/favicon/favicon-96x96.png",alt:"Bitx.cx Logo",height:"32",width:"32"})}),(0,a.jsxs)("div",{className:c().buttons,children:[(0,a.jsx)("div",{onClick:closeAll,className:"".concat(c().highlight," ").concat(e?c().highlightSelected:""),children:(0,a.jsx)("w3m-network-button",{})}),(0,a.jsx)("div",{onClick:closeAll,className:"".concat(c().highlight," ").concat(n?c().highlightSelected:""),children:(0,a.jsx)("w3m-button",{})})]})]})]}),(0,a.jsx)("main",{className:c().main,children:(0,a.jsx)("div",{className:c().wrapper,children:(0,a.jsxs)("div",{className:c().container,children:[(0,a.jsx)("h1",{className:c().title,children:"Swap your tokens for ETH..."}),(0,a.jsx)("h2",{className:c().subtitle,children:"...even when you have no gas."}),(0,a.jsxs)(TokenProvider,{children:[(0,a.jsx)(components_SlippageSetting,{}),(0,a.jsx)(components_TokenList,{})]}),(0,a.jsxs)("div",{className:c().footer,children:[(0,a.jsxs)("a",{href:"https://bitx.cx",children:[(0,a.jsx)("img",{src:"/favicon/favicon-96x96.png",alt:"BitxChange Logo",height:"32",width:"32"})," ","Bitx.cx"]})," ","|",(0,a.jsxs)("a",{href:"https://token.bitx.cx",children:[(0,a.jsx)("img",{src:"/favicon/favicon-96x96.png",alt:"BitxChange Logo",height:"32",width:"32"})," ","Token"]})]})]})})})]})}},45652:function(e){e.exports={contractPaysInfoTxt:"ContractPays_contractPaysInfoTxt__oLfEj",contractPaysInfo:"ContractPays_contractPaysInfo__qWhQk"}},72242:function(e){e.exports={main:"Home_main__2uIek",wrapper:"Home_wrapper__02JqL",animateGlow:"Home_animateGlow__8dMnF",content:"Home_content__Qnbja",footer:"Home_footer__wJNRn",container:"Home_container__9OuOz",button:"Home_button__Mzpzz",highlight:"Home_highlight__TZ0SE",highlightSelected:"Home_highlightSelected__sCqsL",header:"Home_header__ZUWxe",buttons:"Home_buttons__L_amR",backdrop:"Home_backdrop__HYxNf"}},2164:function(e){e.exports={defaultSlippage:"TokenRow_defaultSlippage__cM2kR",tokenRowContainer:"TokenRow_tokenRowContainer__hDtli",TokenRow:"TokenRow_TokenRow___Uekq",tokenDetails:"TokenRow_tokenDetails__e5dRe",tokenName:"TokenRow_tokenName__MK0t5",tokenSymbol:"TokenRow_tokenSymbol__hGMj0",tokenBalance:"TokenRow_tokenBalance__Ar01J",tokenNameSymbol:"TokenRow_tokenNameSymbol__13r3_",tokenActions:"TokenRow_tokenActions__J_pz2",actionButton:"TokenRow_actionButton__K3_xh"}}},function(e){e.O(0,[466,774,888,179],function(){return e(e.s=48312)}),_N_E=e.O()}]);